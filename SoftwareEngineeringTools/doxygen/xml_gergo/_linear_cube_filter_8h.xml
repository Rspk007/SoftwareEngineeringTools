<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.7">
  <compounddef id="_linear_cube_filter_8h" kind="file">
    <compoundname>LinearCubeFilter.h</compoundname>
    <includes refid="_filter_8h" local="yes">Filter.h</includes>
    <includes refid="_volume_8h" local="yes">Volume.h</includes>
    <includes refid="_vector_8h" local="yes">Vector.h</includes>
    <includes refid="_grid_8h" local="yes">Grid.h</includes>
    <includes refid="_cc_grid_8h" local="yes">CcGrid.h</includes>
    <includes refid="_type_operators_8h" local="yes">TypeOperators.h</includes>
    <includedby refid="main_8cpp" local="yes">Új mappa/main.cpp</includedby>
    <incdepgraph>
      <node id="275">
        <label>Új mappa/LinearCubeFilter.h</label>
        <link refid="LinearCubeFilter.h"/>
        <childnode refid="276" relation="include">
        </childnode>
        <childnode refid="277" relation="include">
        </childnode>
        <childnode refid="279" relation="include">
        </childnode>
        <childnode refid="292" relation="include">
        </childnode>
        <childnode refid="293" relation="include">
        </childnode>
        <childnode refid="285" relation="include">
        </childnode>
      </node>
      <node id="279">
        <label>Vector.h</label>
        <link refid="_vector_8h"/>
        <childnode refid="280" relation="include">
        </childnode>
        <childnode refid="281" relation="include">
        </childnode>
        <childnode refid="282" relation="include">
        </childnode>
        <childnode refid="283" relation="include">
        </childnode>
      </node>
      <node id="282">
        <label>cmath</label>
      </node>
      <node id="281">
        <label>stdexcept</label>
      </node>
      <node id="283">
        <label>Point.h</label>
        <link refid="_point_8h"/>
        <childnode refid="281" relation="include">
        </childnode>
        <childnode refid="282" relation="include">
        </childnode>
        <childnode refid="284" relation="include">
        </childnode>
      </node>
      <node id="290">
        <label>Line.h</label>
        <link refid="_line_8h"/>
        <childnode refid="284" relation="include">
        </childnode>
        <childnode refid="279" relation="include">
        </childnode>
        <childnode refid="285" relation="include">
        </childnode>
      </node>
      <node id="292">
        <label>Grid.h</label>
        <link refid="_grid_8h"/>
        <childnode refid="279" relation="include">
        </childnode>
        <childnode refid="285" relation="include">
        </childnode>
      </node>
      <node id="288">
        <label>IIntersectable.h</label>
        <link refid="_i_intersectable_8h"/>
        <childnode refid="289" relation="include">
        </childnode>
        <childnode refid="285" relation="include">
        </childnode>
        <childnode refid="279" relation="include">
        </childnode>
      </node>
      <node id="287">
        <label>Material.h</label>
        <link refid="_material_8h"/>
        <childnode refid="279" relation="include">
        </childnode>
      </node>
      <node id="277">
        <label>Volume.h</label>
        <link refid="_volume_8h"/>
        <childnode refid="278" relation="include">
        </childnode>
        <childnode refid="286" relation="include">
        </childnode>
        <childnode refid="291" relation="include">
        </childnode>
        <childnode refid="279" relation="include">
        </childnode>
        <childnode refid="285" relation="include">
        </childnode>
        <childnode refid="289" relation="include">
        </childnode>
        <childnode refid="287" relation="include">
        </childnode>
      </node>
      <node id="289">
        <label>Ray.h</label>
        <link refid="_ray_8h"/>
        <childnode refid="290" relation="include">
        </childnode>
        <childnode refid="279" relation="include">
        </childnode>
        <childnode refid="285" relation="include">
        </childnode>
      </node>
      <node id="280">
        <label>iostream</label>
      </node>
      <node id="285">
        <label>TypeOperators.h</label>
        <link refid="_type_operators_8h"/>
      </node>
      <node id="284">
        <label>Primitive.h</label>
        <link refid="_primitive_8h"/>
      </node>
      <node id="276">
        <label>Filter.h</label>
        <link refid="_filter_8h"/>
        <childnode refid="277" relation="include">
        </childnode>
        <childnode refid="279" relation="include">
        </childnode>
        <childnode refid="292" relation="include">
        </childnode>
      </node>
      <node id="278">
        <label>ISampleable.h</label>
        <link refid="_i_sampleable_8h"/>
        <childnode refid="279" relation="include">
        </childnode>
        <childnode refid="285" relation="include">
        </childnode>
      </node>
      <node id="293">
        <label>CcGrid.h</label>
        <link refid="_cc_grid_8h"/>
        <childnode refid="292" relation="include">
        </childnode>
        <childnode refid="279" relation="include">
        </childnode>
        <childnode refid="285" relation="include">
        </childnode>
      </node>
      <node id="291">
        <label>Surface.h</label>
        <link refid="_surface_8h"/>
        <childnode refid="288" relation="include">
        </childnode>
        <childnode refid="286" relation="include">
        </childnode>
        <childnode refid="287" relation="include">
        </childnode>
        <childnode refid="279" relation="include">
        </childnode>
        <childnode refid="289" relation="include">
        </childnode>
        <childnode refid="285" relation="include">
        </childnode>
      </node>
      <node id="286">
        <label>Intersection.h</label>
        <link refid="_intersection_8h"/>
        <childnode refid="279" relation="include">
        </childnode>
        <childnode refid="287" relation="include">
        </childnode>
        <childnode refid="288" relation="include">
        </childnode>
        <childnode refid="289" relation="include">
        </childnode>
      </node>
    </incdepgraph>
    <invincdepgraph>
      <node id="294">
        <label>Új mappa/LinearCubeFilter.h</label>
        <link refid="LinearCubeFilter.h"/>
        <childnode refid="295" relation="include">
        </childnode>
      </node>
      <node id="295">
        <label>Új mappa/main.cpp</label>
        <link refid="main_8cpp"/>
      </node>
    </invincdepgraph>
    <innerclass refid="class_sampling_1_1_linear_cube_filter" prot="public">Sampling::LinearCubeFilter</innerclass>
    <innernamespace refid="namespace_sampling">Sampling</innernamespace>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="preprocessor">#ifndef<sp/>LINEARCUBEFILTER_H</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>LINEARCUBEFILTER_H</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3"><highlight class="normal"></highlight></codeline>
<codeline lineno="4"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="_filter_8h" kindref="compound">Filter.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="_volume_8h" kindref="compound">Volume.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="_vector_8h" kindref="compound">Vector.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="_grid_8h" kindref="compound">Grid.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="8"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="_cc_grid_8h" kindref="compound">CcGrid.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="9"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="_type_operators_8h" kindref="compound">TypeOperators.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="10"><highlight class="normal"></highlight></codeline>
<codeline lineno="11"><highlight class="normal"></highlight><highlight class="keyword">using<sp/>namespace<sp/></highlight><highlight class="normal">Geometry;</highlight></codeline>
<codeline lineno="12"><highlight class="normal"></highlight></codeline>
<codeline lineno="13"><highlight class="normal"></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal">Sampling</highlight></codeline>
<codeline lineno="14"><highlight class="normal">{</highlight></codeline>
<codeline lineno="23"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T&gt;<sp/></highlight><highlight class="comment">//<sp/>the<sp/>type<sp/>of<sp/>the<sp/>coordinates<sp/>in<sp/>the<sp/>space</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="24" refid="class_sampling_1_1_linear_cube_filter" refkind="compound"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="class_sampling_1_1_linear_cube_filter" kindref="compound">LinearCubeFilter</ref><sp/>:<sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/><ref refid="class_sampling_1_1_filter" kindref="compound">Filter</ref>&lt;T&gt;</highlight></codeline>
<codeline lineno="25"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="26"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="30"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_sampling_1_1_linear_cube_filter" kindref="compound">LinearCubeFilter</ref>();</highlight></codeline>
<codeline lineno="31"><highlight class="normal"></highlight></codeline>
<codeline lineno="37"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_sampling_1_1_linear_cube_filter" kindref="compound">LinearCubeFilter</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="class_sampling_1_1_volume" kindref="compound">Volume&lt;T&gt;</ref>*<sp/>filteredObject,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="class_geometry_1_1_cc_grid" kindref="compound">CcGrid&lt;T&gt;</ref>*<sp/>grid);</highlight></codeline>
<codeline lineno="38"><highlight class="normal"></highlight></codeline>
<codeline lineno="39"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>----<sp/>OVERRIDE<sp/>FUNCTIONS<sp/>----<sp/>//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="40"><highlight class="normal"></highlight></codeline>
<codeline lineno="49"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/>T<sp/>getValueAt(<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="class_geometry_1_1_vector" kindref="compound">Vector&lt;T&gt;</ref>&amp;<sp/>point,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="class_utilities_1_1_type_operators" kindref="compound">Utilities::TypeOperators&lt;T&gt;</ref>&amp;<sp/>Toperators<sp/>)<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="50"><highlight class="normal"><sp/><sp/><sp/><sp/>};</highlight></codeline>
<codeline lineno="51"><highlight class="normal"></highlight></codeline>
<codeline lineno="52"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>----<sp/>DEFINITIONS<sp/>----<sp/>//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="53"><highlight class="normal"></highlight></codeline>
<codeline lineno="54"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T&gt;</highlight></codeline>
<codeline lineno="55" refid="class_sampling_1_1_linear_cube_filter_1a4aa2860543819ccb8a3da3df8d845037" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_sampling_1_1_linear_cube_filter" kindref="compound">LinearCubeFilter&lt;T&gt;::LinearCubeFilter</ref>():</highlight></codeline>
<codeline lineno="56"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_sampling_1_1_filter" kindref="compound">Filter</ref>&lt;T&gt;::<ref refid="class_sampling_1_1_filter" kindref="compound">Filter</ref>()</highlight></codeline>
<codeline lineno="57"><highlight class="normal"><sp/><sp/><sp/><sp/>{}</highlight></codeline>
<codeline lineno="58"><highlight class="normal"></highlight></codeline>
<codeline lineno="59"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T&gt;</highlight></codeline>
<codeline lineno="60" refid="class_sampling_1_1_linear_cube_filter_1a3d2ff46e5e1c56a695e298c7985d4e7b" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_sampling_1_1_linear_cube_filter_1a4aa2860543819ccb8a3da3df8d845037" kindref="member">LinearCubeFilter&lt;T&gt;::LinearCubeFilter</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="class_sampling_1_1_volume" kindref="compound">Volume&lt;T&gt;</ref>*<sp/>filteredObject,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="class_geometry_1_1_cc_grid" kindref="compound">CcGrid&lt;T&gt;</ref>*<sp/>grid):</highlight></codeline>
<codeline lineno="61"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_sampling_1_1_filter" kindref="compound">Filter</ref>&lt;T&gt;::<ref refid="class_sampling_1_1_filter" kindref="compound">Filter</ref>(filteredObject,<sp/>grid)</highlight></codeline>
<codeline lineno="62"><highlight class="normal"><sp/><sp/><sp/><sp/>{}</highlight></codeline>
<codeline lineno="63"><highlight class="normal"></highlight></codeline>
<codeline lineno="64"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T&gt;</highlight></codeline>
<codeline lineno="65" refid="class_sampling_1_1_linear_cube_filter_1ae7fe064de3b279d74867a690bd6f4953" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>T<sp/><ref refid="class_sampling_1_1_linear_cube_filter_1ae7fe064de3b279d74867a690bd6f4953" kindref="member">LinearCubeFilter&lt;T&gt;::getValueAt</ref>(<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="class_geometry_1_1_vector" kindref="compound">Vector&lt;T&gt;</ref>&amp;<sp/>point,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="class_utilities_1_1_type_operators" kindref="compound">Utilities::TypeOperators&lt;T&gt;</ref>&amp;<sp/>Toperators<sp/>)</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="66"><highlight class="keyword"><sp/><sp/><sp/><sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="67"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>!<sp/>isActive()<sp/>||<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>if<sp/>it&apos;s<sp/>not<sp/>active,<sp/>return<sp/>the<sp/>unfiltered<sp/></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="68"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>filteredObject<sp/>==<sp/>0<sp/>||<sp/>grid<sp/>==<sp/>0<sp/>)<sp/></highlight><highlight class="comment">//<sp/>values<sp/>of<sp/>the<sp/>sampled<sp/>object</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="69"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="70"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>getFilteredObject()-&gt;getValueAt(<sp/>point,<sp/>Toperators<sp/>);</highlight></codeline>
<codeline lineno="71"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="72"><highlight class="normal"></highlight></codeline>
<codeline lineno="73"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>T<sp/>value<sp/>=<sp/>T();<sp/></highlight><highlight class="comment">//<sp/>value<sp/>=<sp/>0</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="74"><highlight class="normal"></highlight></codeline>
<codeline lineno="75"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>get<sp/>the<sp/>grid<sp/>vertices<sp/>to<sp/>be<sp/>used<sp/>to<sp/>interpolation</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="76"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_geometry_1_1_vector" kindref="compound">Vector&lt;Vector&lt;T&gt;</ref>&gt;<sp/>lerpVertices<sp/>=<sp/>getGrid()-&gt;getLerpVertices(<sp/>point,<sp/>Toperators<sp/>);</highlight></codeline>
<codeline lineno="77"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>vertexCount<sp/>=<sp/>8;<sp/></highlight><highlight class="comment">//<sp/>lerpVertices.getDim();<sp/>//<sp/>should<sp/>be<sp/>8</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="78"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="79"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>T<sp/>bigVolume<sp/>=<sp/>T();</highlight></codeline>
<codeline lineno="80"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>ii<sp/>=<sp/>0;<sp/>ii<sp/>&lt;<sp/>vertexCount;<sp/>++<sp/>ii)</highlight></codeline>
<codeline lineno="81"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="82"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>T<sp/>weight<sp/>=<sp/>Toperators.<ref refid="class_utilities_1_1_type_operators_1a568333198beb5cf8b2b822ed1f517586" kindref="member">abs</ref>((point[0]<sp/>-<sp/>lerpVertices[ii][0])<sp/>*<sp/></highlight></codeline>
<codeline lineno="83"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(point[1]<sp/>-<sp/>lerpVertices[ii][1])<sp/>*<sp/></highlight></codeline>
<codeline lineno="84"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(point[2]<sp/>-<sp/>lerpVertices[ii][2]));</highlight></codeline>
<codeline lineno="85"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>value<sp/>+=<sp/>weight<sp/>*<sp/>getFilteredObject()-&gt;getValueAt(<sp/>lerpVertices[vertexCount-1-ii],<sp/>Toperators<sp/>);</highlight></codeline>
<codeline lineno="86"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>bigVolume<sp/>+=<sp/>weight;</highlight></codeline>
<codeline lineno="87"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="88"><highlight class="normal"></highlight></codeline>
<codeline lineno="89"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>if<sp/>the<sp/>volume<sp/>of<sp/>the<sp/>whole<sp/>interpolation<sp/>cell<sp/>is<sp/>null</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="90"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>then<sp/>return<sp/>the<sp/>value<sp/>from<sp/>a<sp/>close<sp/>grid<sp/>vertex<sp/>point</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="91"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>Toperators.<ref refid="class_utilities_1_1_type_operators_1a01f8ffb315882112eded9817279c652c" kindref="member">equals</ref>(<sp/>bigVolume,<sp/>T()<sp/>)<sp/>)<sp/></highlight><highlight class="comment">//<sp/>bigVolume<sp/>==<sp/>0</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="92"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>getFilteredObject()-&gt;getValueAt(<sp/>lerpVertices[0],<sp/>Toperators<sp/>);</highlight></codeline>
<codeline lineno="93"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="94"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>value<sp/>/<sp/>bigVolume;</highlight></codeline>
<codeline lineno="95"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="96"><highlight class="normal">}</highlight></codeline>
<codeline lineno="97"><highlight class="normal"></highlight></codeline>
<codeline lineno="98"><highlight class="normal"></highlight><highlight class="preprocessor">#endif<sp/></highlight><highlight class="comment">/*<sp/>LINEARCUBEFILTER_H<sp/>*/</highlight><highlight class="preprocessor"></highlight></codeline>
    </programlisting>
    <location file="C:/Users/Jurecska/Desktop/Új mappa/LinearCubeFilter.h"/>
  </compounddef>
</doxygen>
