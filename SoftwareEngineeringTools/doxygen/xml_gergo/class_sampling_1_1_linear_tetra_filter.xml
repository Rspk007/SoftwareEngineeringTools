<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.7">
  <compounddef id="class_sampling_1_1_linear_tetra_filter" kind="class" prot="public">
    <compoundname>Sampling::LinearTetraFilter</compoundname>
    <basecompoundref refid="class_sampling_1_1_filter" prot="public" virt="non-virtual">Sampling::Filter&lt; T &gt;</basecompoundref>
    <includes refid="_linear_tetra_filter_8h" local="no">LinearTetraFilter.h</includes>
    <templateparamlist>
      <param>
        <type>typename T</type>
      </param>
    </templateparamlist>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="class_sampling_1_1_linear_tetra_filter_1a5cf0b7a08ecd66f914b411f60d89273f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>LinearTetraFilter</definition>
        <argsstring>()</argsstring>
        <name>LinearTetraFilter</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>default c&apos;tor </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/Jurecska/Desktop/Új mappa/LinearTetraFilter.h" line="33" column="1" bodyfile="C:/Users/Jurecska/Desktop/Új mappa/LinearTetraFilter.h" bodystart="58" bodyend="60"/>
      </memberdef>
      <memberdef kind="function" id="class_sampling_1_1_linear_tetra_filter_1a6b06a8935674a42502ffb246a40b7d2f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>LinearTetraFilter</definition>
        <argsstring>(const Volume&lt; T &gt; *filteredObject, const BccGrid&lt; T &gt; *grid)</argsstring>
        <name>LinearTetraFilter</name>
        <param>
          <type>const <ref refid="class_sampling_1_1_volume" kindref="compound">Volume</ref>&lt; T &gt; *</type>
          <declname>filteredObject</declname>
        </param>
        <param>
          <type>const <ref refid="class_geometry_1_1_bcc_grid" kindref="compound">BccGrid</ref>&lt; T &gt; *</type>
          <declname>grid</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>c&apos;tor with parameters <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>filteredObject</parametername>
</parameternamelist>
<parameterdescription>
<para>- the sampleable object to be filtered </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>grid</parametername>
</parameternamelist>
<parameterdescription>
<para>- the grid object that is used by this filter </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/Jurecska/Desktop/Új mappa/LinearTetraFilter.h" line="40" column="1" bodyfile="C:/Users/Jurecska/Desktop/Új mappa/LinearTetraFilter.h" bodystart="63" bodyend="65"/>
      </memberdef>
      <memberdef kind="function" id="class_sampling_1_1_linear_tetra_filter_1ae7fe064de3b279d74867a690bd6f4953" prot="public" static="no" const="yes" explicit="no" inline="no" virt="virtual">
        <type>T</type>
        <definition>T getValueAt</definition>
        <argsstring>(const Vector&lt; T &gt; &amp;point, const Utilities::TypeOperators&lt; T &gt; &amp;Toperators) const </argsstring>
        <name>getValueAt</name>
        <reimplements refid="class_sampling_1_1_filter_1aaf6cee9a80b3085218861a5a8d6b34bc">getValueAt</reimplements>
        <param>
          <type>const <ref refid="class_geometry_1_1_vector" kindref="compound">Vector</ref>&lt; T &gt; &amp;</type>
          <declname>point</declname>
        </param>
        <param>
          <type>const <ref refid="class_utilities_1_1_type_operators" kindref="compound">Utilities::TypeOperators</ref>&lt; T &gt; &amp;</type>
          <declname>Toperators</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Function (inherited from <ref refid="class_sampling_1_1_i_sampleable" kindref="compound">ISampleable</ref>) that calculates the value of the sampleable object at the position specified by the argument &apos;point&apos;. <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>point</parametername>
</parameternamelist>
<parameterdescription>
<para>- the point where the object must calculate the return value </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>Toperators</parametername>
</parameternamelist>
<parameterdescription>
<para>- the operators object of type T </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>- the value at the given point </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/Jurecska/Desktop/Új mappa/LinearTetraFilter.h" line="52" column="1" bodyfile="C:/Users/Jurecska/Desktop/Új mappa/LinearTetraFilter.h" bodystart="68" bodyend="112"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
<para>This class represents a linear filter. It uses a grid (most recommended a BCC grid) to get real values from the filtered object, and at the other points of the space will be linear interpolated. This filter works with TETRAHEDRONS! As filter also implements the interface <ref refid="class_sampling_1_1_i_sampleable" kindref="compound">ISampleable</ref> it can also be filtered. (cascade of filters) </para>    </detaileddescription>
    <inheritancegraph>
      <node id="111">
        <label>ISampleable&lt; T &gt;</label>
        <link refid="class_sampling_1_1_i_sampleable"/>
      </node>
      <node id="110">
        <label>Volume&lt; T &gt;</label>
        <link refid="class_sampling_1_1_volume"/>
        <childnode refid="111" relation="public-inheritance">
        </childnode>
        <childnode refid="112" relation="public-inheritance">
        </childnode>
      </node>
      <node id="112">
        <label>Surface&lt; T &gt;</label>
        <link refid="class_geometry_1_1_surface"/>
        <childnode refid="113" relation="public-inheritance">
        </childnode>
      </node>
      <node id="109">
        <label>Filter&lt; T &gt;</label>
        <link refid="class_sampling_1_1_filter"/>
        <childnode refid="110" relation="public-inheritance">
        </childnode>
      </node>
      <node id="108">
        <label>LinearTetraFilter&lt; T &gt;</label>
        <link refid="class_sampling_1_1_linear_tetra_filter"/>
        <childnode refid="109" relation="public-inheritance">
        </childnode>
      </node>
      <node id="113">
        <label>IIntersectable&lt; T &gt;</label>
        <link refid="class_geometry_1_1_i_intersectable"/>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="122">
        <label>Point&lt; float &gt;</label>
        <link refid="class_geometry_1_1_point"/>
        <childnode refid="123" relation="public-inheritance">
        </childnode>
      </node>
      <node id="120">
        <label>Material</label>
        <link refid="struct_visualisation_1_1_material"/>
        <childnode refid="121" relation="usage">
          <edgelabel>ka</edgelabel>
          <edgelabel>ks</edgelabel>
          <edgelabel>kd</edgelabel>
        </childnode>
      </node>
      <node id="117">
        <label>ISampleable&lt; T &gt;</label>
        <link refid="class_sampling_1_1_i_sampleable"/>
      </node>
      <node id="116">
        <label>Volume&lt; T &gt;</label>
        <link refid="class_sampling_1_1_volume"/>
        <childnode refid="117" relation="public-inheritance">
        </childnode>
        <childnode refid="118" relation="public-inheritance">
        </childnode>
      </node>
      <node id="118">
        <label>Surface&lt; T &gt;</label>
        <link refid="class_geometry_1_1_surface"/>
        <childnode refid="119" relation="public-inheritance">
        </childnode>
        <childnode refid="120" relation="usage">
          <edgelabel>material</edgelabel>
        </childnode>
      </node>
      <node id="123">
        <label>Primitive</label>
        <link refid="class_geometry_1_1_primitive"/>
      </node>
      <node id="115">
        <label>Filter&lt; T &gt;</label>
        <link refid="class_sampling_1_1_filter"/>
        <childnode refid="116" relation="public-inheritance">
        </childnode>
      </node>
      <node id="121">
        <label>Vector&lt; float &gt;</label>
        <link refid="class_geometry_1_1_vector"/>
        <childnode refid="122" relation="public-inheritance">
        </childnode>
      </node>
      <node id="114">
        <label>LinearTetraFilter&lt; T &gt;</label>
        <link refid="class_sampling_1_1_linear_tetra_filter"/>
        <childnode refid="115" relation="public-inheritance">
        </childnode>
      </node>
      <node id="119">
        <label>IIntersectable&lt; T &gt;</label>
        <link refid="class_geometry_1_1_i_intersectable"/>
      </node>
    </collaborationgraph>
    <location file="C:/Users/Jurecska/Desktop/Új mappa/LinearTetraFilter.h" line="28" column="1" bodyfile="C:/Users/Jurecska/Desktop/Új mappa/LinearTetraFilter.h" bodystart="27" bodyend="53"/>
    <listofallmembers>
      <member refid="class_sampling_1_1_filter_1a8011fcbeb5efeda20bd2dbffbbb70165" prot="public" virt="non-virtual"><scope>Sampling::LinearTetraFilter</scope><name>activate</name></member>
      <member refid="class_sampling_1_1_filter_1a03c996f9fcf0e10baeb3e700be0c409a" prot="protected" virt="non-virtual"><scope>Sampling::LinearTetraFilter</scope><name>active</name></member>
      <member refid="class_sampling_1_1_filter_1a8308b4bb6079733f4b77ced9d46da7a9" prot="public" virt="non-virtual"><scope>Sampling::LinearTetraFilter</scope><name>deactivate</name></member>
      <member refid="class_sampling_1_1_filter_1ad724ba04cbde6118ceddbd6635e96eaa" prot="public" virt="non-virtual"><scope>Sampling::LinearTetraFilter</scope><name>Filter</name></member>
      <member refid="class_sampling_1_1_filter_1a39b9914d0b1a0c54e509d0992facbd4a" prot="public" virt="non-virtual"><scope>Sampling::LinearTetraFilter</scope><name>Filter</name></member>
      <member refid="class_sampling_1_1_filter_1a20abde6a69cb7dfbe98468203f5848b9" prot="protected" virt="non-virtual"><scope>Sampling::LinearTetraFilter</scope><name>filteredObject</name></member>
      <member refid="class_sampling_1_1_filter_1ae9f51e1d4d767694fc3e192a29ae013e" prot="public" virt="non-virtual"><scope>Sampling::LinearTetraFilter</scope><name>getFilteredObject</name></member>
      <member refid="class_sampling_1_1_filter_1a361943c043351a96faa13cfd1f126d27" prot="public" virt="non-virtual"><scope>Sampling::LinearTetraFilter</scope><name>getGrid</name></member>
      <member refid="class_sampling_1_1_volume_1af98bbc751e90a15b59c81ee4c17630b2" prot="public" virt="non-virtual"><scope>Sampling::LinearTetraFilter</scope><name>getIso</name></member>
      <member refid="class_geometry_1_1_surface_1a3d7a6d87e670d2c6415e92a1f0e9feb4" prot="public" virt="non-virtual"><scope>Sampling::LinearTetraFilter</scope><name>getMaterial</name></member>
      <member refid="class_sampling_1_1_volume_1af9134066dc508e3201a1dea2acb755a8" prot="public" virt="virtual"><scope>Sampling::LinearTetraFilter</scope><name>getNormal</name></member>
      <member refid="class_sampling_1_1_linear_tetra_filter_1ae7fe064de3b279d74867a690bd6f4953" prot="public" virt="virtual"><scope>Sampling::LinearTetraFilter</scope><name>getValueAt</name></member>
      <member refid="class_sampling_1_1_filter_1a9ec9b4fce5574a22db09f2a3c8b2f93a" prot="protected" virt="non-virtual"><scope>Sampling::LinearTetraFilter</scope><name>grid</name></member>
      <member refid="class_sampling_1_1_volume_1aae711dcbf18946964b9c42502e9d3377" prot="public" virt="virtual"><scope>Sampling::LinearTetraFilter</scope><name>intersect</name></member>
      <member refid="class_sampling_1_1_filter_1a22761609071413dcce0632885c820e87" prot="public" virt="non-virtual"><scope>Sampling::LinearTetraFilter</scope><name>isActive</name></member>
      <member refid="class_sampling_1_1_volume_1a8c8c997c19f49d10d5028ecd6d94805c" prot="protected" virt="non-virtual"><scope>Sampling::LinearTetraFilter</scope><name>iso</name></member>
      <member refid="class_sampling_1_1_linear_tetra_filter_1a5cf0b7a08ecd66f914b411f60d89273f" prot="public" virt="non-virtual"><scope>Sampling::LinearTetraFilter</scope><name>LinearTetraFilter</name></member>
      <member refid="class_sampling_1_1_linear_tetra_filter_1a6b06a8935674a42502ffb246a40b7d2f" prot="public" virt="non-virtual"><scope>Sampling::LinearTetraFilter</scope><name>LinearTetraFilter</name></member>
      <member refid="class_geometry_1_1_surface_1aa2a46d8387923389a3aad30be0b8a8b5" prot="protected" virt="non-virtual"><scope>Sampling::LinearTetraFilter</scope><name>material</name></member>
      <member refid="class_sampling_1_1_filter_1a04b347c4d1863fb924237689a0312881" prot="public" virt="non-virtual"><scope>Sampling::LinearTetraFilter</scope><name>setFilteredObject</name></member>
      <member refid="class_sampling_1_1_filter_1a22a66fdf28522c42f8347161ba1ac3fe" prot="public" virt="non-virtual"><scope>Sampling::LinearTetraFilter</scope><name>setGrid</name></member>
      <member refid="class_sampling_1_1_volume_1a06df2552be7fe124a173741e8ba79770" prot="public" virt="non-virtual"><scope>Sampling::LinearTetraFilter</scope><name>setIso</name></member>
      <member refid="class_geometry_1_1_surface_1a26d09c46a06493cf2d9116991c80f816" prot="public" virt="non-virtual"><scope>Sampling::LinearTetraFilter</scope><name>setMaterial</name></member>
      <member refid="class_geometry_1_1_surface_1a6e1a6ad293d9318f65c2e28c468c66ba" prot="protected" virt="non-virtual"><scope>Sampling::LinearTetraFilter</scope><name>Surface</name></member>
      <member refid="class_geometry_1_1_surface_1a148c9d72f29cf29e7ad5e787e2819057" prot="protected" virt="non-virtual"><scope>Sampling::LinearTetraFilter</scope><name>Surface</name></member>
      <member refid="class_sampling_1_1_volume_1a3a8fada6f2d2b5ce58f6a0ffef34d9f1" prot="protected" virt="non-virtual"><scope>Sampling::LinearTetraFilter</scope><name>Volume</name></member>
      <member refid="class_sampling_1_1_volume_1aefc1e3fc5f3846e8a1f3186e06017b52" prot="protected" virt="non-virtual"><scope>Sampling::LinearTetraFilter</scope><name>Volume</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
