<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.7">
  <compounddef id="class_geometry_1_1_cc_grid" kind="class" prot="public">
    <compoundname>Geometry::CcGrid</compoundname>
    <basecompoundref refid="class_geometry_1_1_grid" prot="public" virt="non-virtual">Geometry::Grid&lt; T &gt;</basecompoundref>
    <includes refid="_cc_grid_8h" local="no">CcGrid.h</includes>
    <templateparamlist>
      <param>
        <type>typename</type>
        <declname>T</declname>
        <defname>T</defname>
      </param>
    </templateparamlist>
      <sectiondef kind="protected-attrib">
      <memberdef kind="variable" id="class_geometry_1_1_cc_grid_1a5d8fe3fccb91132ff5328f69105bcda2" prot="protected" static="no" mutable="no">
        <type><ref refid="class_geometry_1_1_vector" kindref="compound">Vector</ref>&lt; T &gt;</type>
        <definition>Vector&lt;T&gt; origin</definition>
        <argsstring></argsstring>
        <name>origin</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/Jurecska/Desktop/Új mappa/CcGrid.h" line="17" column="1" bodyfile="C:/Users/Jurecska/Desktop/Új mappa/CcGrid.h" bodystart="17" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_geometry_1_1_cc_grid_1a75b94af80f9cec348d50461cd6823cb7" prot="protected" static="no" mutable="no">
        <type>T</type>
        <definition>T sideLength</definition>
        <argsstring></argsstring>
        <name>sideLength</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/Jurecska/Desktop/Új mappa/CcGrid.h" line="18" column="1" bodyfile="C:/Users/Jurecska/Desktop/Új mappa/CcGrid.h" bodystart="18" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_geometry_1_1_cc_grid_1a498ab2db3cb1dc1a9fba46068a8b212f" prot="protected" static="no" mutable="no">
        <type>T</type>
        <definition>T sideLengthHalf</definition>
        <argsstring></argsstring>
        <name>sideLengthHalf</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/Jurecska/Desktop/Új mappa/CcGrid.h" line="19" column="1" bodyfile="C:/Users/Jurecska/Desktop/Új mappa/CcGrid.h" bodystart="19" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="class_geometry_1_1_cc_grid_1a96888b7acc6998682dd39eecd2e1a1e7" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>CcGrid</definition>
        <argsstring>(const Vector&lt; T &gt; &amp;origin, const T &amp;sideLength)</argsstring>
        <name>CcGrid</name>
        <param>
          <type>const <ref refid="class_geometry_1_1_vector" kindref="compound">Vector</ref>&lt; T &gt; &amp;</type>
          <declname>origin</declname>
        </param>
        <param>
          <type>const T &amp;</type>
          <declname>sideLength</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>c&apos;tor with arguments <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>origin</parametername>
</parameternamelist>
<parameterdescription>
<para>- the origin point in world coordinates </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>sideLength</parametername>
</parameternamelist>
<parameterdescription>
<para>- the side length of the unit cell (should be a positive number) </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/Jurecska/Desktop/Új mappa/CcGrid.h" line="28" column="1" bodyfile="C:/Users/Jurecska/Desktop/Új mappa/CcGrid.h" bodystart="95" bodyend="99"/>
      </memberdef>
      <memberdef kind="function" id="class_geometry_1_1_cc_grid_1a31f75e1d9923ef16f08abfc1fcfa939f" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void setSideLength</definition>
        <argsstring>(const T &amp;sideLength)</argsstring>
        <name>setSideLength</name>
        <param>
          <type>const T &amp;</type>
          <declname>sideLength</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>This method can set the side length (resolution) of the grid. <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>sideLength</parametername>
</parameternamelist>
<parameterdescription>
<para>- the side length of the unit cell (should be a positive number) </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/Jurecska/Desktop/Új mappa/CcGrid.h" line="38" column="1" bodyfile="C:/Users/Jurecska/Desktop/Új mappa/CcGrid.h" bodystart="102" bodyend="106"/>
      </memberdef>
      <memberdef kind="function" id="class_geometry_1_1_cc_grid_1ac4cc89dbd0cf8ea48d204b3dda86db72" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>T</type>
        <definition>T getSideLength</definition>
        <argsstring>() const </argsstring>
        <name>getSideLength</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>This method returns the actual value of the side length of the unit cell. <simplesect kind="return"><para>- the actual side length of the unit cell </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/Jurecska/Desktop/Új mappa/CcGrid.h" line="45" column="1" bodyfile="C:/Users/Jurecska/Desktop/Új mappa/CcGrid.h" bodystart="109" bodyend="112"/>
      </memberdef>
      <memberdef kind="function" id="class_geometry_1_1_cc_grid_1a34ad13cdd79d72ee51591dab2b0fc8d2" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void setOrigin</definition>
        <argsstring>(const Vector&lt; T &gt; &amp;origin)</argsstring>
        <name>setOrigin</name>
        <param>
          <type>const <ref refid="class_geometry_1_1_vector" kindref="compound">Vector</ref>&lt; T &gt; &amp;</type>
          <declname>origin</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>This method can set origin of the grid. <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>origin</parametername>
</parameternamelist>
<parameterdescription>
<para>- the new origin </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/Jurecska/Desktop/Új mappa/CcGrid.h" line="51" column="1" bodyfile="C:/Users/Jurecska/Desktop/Új mappa/CcGrid.h" bodystart="115" bodyend="118"/>
      </memberdef>
      <memberdef kind="function" id="class_geometry_1_1_cc_grid_1a835c7cb37506f78b00265bdee05795e6" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="class_geometry_1_1_vector" kindref="compound">Vector</ref>&lt; T &gt;</type>
        <definition>Vector&lt; T &gt; getOrigin</definition>
        <argsstring>() const </argsstring>
        <name>getOrigin</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>This method returns the actual value of the origin of the grid. <simplesect kind="return"><para>- the actual origin of the grid </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/Jurecska/Desktop/Új mappa/CcGrid.h" line="58" column="1" bodyfile="C:/Users/Jurecska/Desktop/Új mappa/CcGrid.h" bodystart="121" bodyend="124"/>
      </memberdef>
      <memberdef kind="function" id="class_geometry_1_1_cc_grid_1a4bbb251dd45b8dab47447f175b8e791c" prot="public" static="no" const="yes" explicit="no" inline="no" virt="virtual">
        <type><ref refid="class_geometry_1_1_vector" kindref="compound">Vector</ref>&lt; T &gt;</type>
        <definition>Vector&lt; T &gt; getNearestPoint</definition>
        <argsstring>(const Vector&lt; T &gt; &amp;point, const Utilities::TypeOperators&lt; T &gt; &amp;Toperators) const </argsstring>
        <name>getNearestPoint</name>
        <reimplements refid="class_geometry_1_1_grid_1a2cdc42bd1e012a3b8473d518b7c2f6b0">getNearestPoint</reimplements>
        <param>
          <type>const <ref refid="class_geometry_1_1_vector" kindref="compound">Vector</ref>&lt; T &gt; &amp;</type>
          <declname>point</declname>
        </param>
        <param>
          <type>const <ref refid="class_utilities_1_1_type_operators" kindref="compound">Utilities::TypeOperators</ref>&lt; T &gt; &amp;</type>
          <declname>Toperators</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>This method can return the lattice point in whose Voronoi-region is the given point. This lattice point is the nearest neighbour point of the given point. <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>point</parametername>
</parameternamelist>
<parameterdescription>
<para>- the point whose nearest neighbour we are looking for </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>Toperators</parametername>
</parameternamelist>
<parameterdescription>
<para>- the operators object of type T </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>- the nearest neighbour point in the lattice in world coordinates (not in lattice locale coordinates!) </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/Jurecska/Desktop/Új mappa/CcGrid.h" line="72" column="1" bodyfile="C:/Users/Jurecska/Desktop/Új mappa/CcGrid.h" bodystart="127" bodyend="148"/>
      </memberdef>
      <memberdef kind="function" id="class_geometry_1_1_cc_grid_1a08afd8625c48e19c2f0e14d92eb50167" prot="public" static="no" const="yes" explicit="no" inline="no" virt="virtual">
        <type><ref refid="class_geometry_1_1_vector" kindref="compound">Vector</ref>&lt; <ref refid="class_geometry_1_1_vector" kindref="compound">Vector</ref>&lt; T &gt; &gt;</type>
        <definition>Vector&lt; Vector&lt; T &gt; &gt; getFirstNeighbourCellVertices</definition>
        <argsstring>(const Vector&lt; T &gt; &amp;point) const </argsstring>
        <name>getFirstNeighbourCellVertices</name>
        <reimplements refid="class_geometry_1_1_grid_1a7947b840d23ada9abd70df77ce4a9c06">getFirstNeighbourCellVertices</reimplements>
        <param>
          <type>const <ref refid="class_geometry_1_1_vector" kindref="compound">Vector</ref>&lt; T &gt; &amp;</type>
          <declname>point</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>This method gets a point, and returns in a vector all of the first neighbour points of this. The method doesn&apos;t check, if the point in the argument fits a lattice point, or not! <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>point</parametername>
</parameternamelist>
<parameterdescription>
<para>- the point whose first neighbours we are looking for </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>- a vector of the first neighbours (each is given in world coordinates!) </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/Jurecska/Desktop/Új mappa/CcGrid.h" line="81" column="1" bodyfile="C:/Users/Jurecska/Desktop/Új mappa/CcGrid.h" bodystart="151" bodyend="163"/>
      </memberdef>
      <memberdef kind="function" id="class_geometry_1_1_cc_grid_1ab4c0f69ae16cd070e5612327aac89159" prot="public" static="no" const="yes" explicit="no" inline="no" virt="virtual">
        <type><ref refid="class_geometry_1_1_vector" kindref="compound">Vector</ref>&lt; <ref refid="class_geometry_1_1_vector" kindref="compound">Vector</ref>&lt; T &gt; &gt;</type>
        <definition>Vector&lt; Vector&lt; T &gt; &gt; getLerpVertices</definition>
        <argsstring>(const Vector&lt; T &gt; &amp;point, const Utilities::TypeOperators&lt; T &gt; &amp;Toperators) const </argsstring>
        <name>getLerpVertices</name>
        <reimplements refid="class_geometry_1_1_grid_1a43bd5e3ba4d39448cd92477df03b84a2">getLerpVertices</reimplements>
        <param>
          <type>const <ref refid="class_geometry_1_1_vector" kindref="compound">Vector</ref>&lt; T &gt; &amp;</type>
          <declname>point</declname>
        </param>
        <param>
          <type>const <ref refid="class_utilities_1_1_type_operators" kindref="compound">Utilities::TypeOperators</ref>&lt; T &gt; &amp;</type>
          <declname>Toperators</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>This method gets a point, and returns in a vector all of the vertices whose value influences the linear interpolation of the selected point. <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>point</parametername>
</parameternamelist>
<parameterdescription>
<para>- the point whose lerp-vertices we are looking for </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/Jurecska/Desktop/Új mappa/CcGrid.h" line="89" column="1" bodyfile="C:/Users/Jurecska/Desktop/Új mappa/CcGrid.h" bodystart="166" bodyend="191"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
<para>This class represents a simple cubic grid. </para>    </detaileddescription>
    <inheritancegraph>
      <node id="22">
        <label>Grid&lt; T &gt;</label>
        <link refid="class_geometry_1_1_grid"/>
      </node>
      <node id="21">
        <label>CcGrid&lt; T &gt;</label>
        <link refid="class_geometry_1_1_cc_grid"/>
        <childnode refid="22" relation="public-inheritance">
        </childnode>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="24">
        <label>Grid&lt; T &gt;</label>
        <link refid="class_geometry_1_1_grid"/>
      </node>
      <node id="23">
        <label>CcGrid&lt; T &gt;</label>
        <link refid="class_geometry_1_1_cc_grid"/>
        <childnode refid="24" relation="public-inheritance">
        </childnode>
      </node>
    </collaborationgraph>
    <location file="C:/Users/Jurecska/Desktop/Új mappa/CcGrid.h" line="15" column="1" bodyfile="C:/Users/Jurecska/Desktop/Új mappa/CcGrid.h" bodystart="14" bodyend="90"/>
    <listofallmembers>
      <member refid="class_geometry_1_1_cc_grid_1a96888b7acc6998682dd39eecd2e1a1e7" prot="public" virt="non-virtual"><scope>Geometry::CcGrid</scope><name>CcGrid</name></member>
      <member refid="class_geometry_1_1_cc_grid_1a08afd8625c48e19c2f0e14d92eb50167" prot="public" virt="virtual"><scope>Geometry::CcGrid</scope><name>getFirstNeighbourCellVertices</name></member>
      <member refid="class_geometry_1_1_cc_grid_1ab4c0f69ae16cd070e5612327aac89159" prot="public" virt="virtual"><scope>Geometry::CcGrid</scope><name>getLerpVertices</name></member>
      <member refid="class_geometry_1_1_cc_grid_1a4bbb251dd45b8dab47447f175b8e791c" prot="public" virt="virtual"><scope>Geometry::CcGrid</scope><name>getNearestPoint</name></member>
      <member refid="class_geometry_1_1_cc_grid_1a835c7cb37506f78b00265bdee05795e6" prot="public" virt="non-virtual"><scope>Geometry::CcGrid</scope><name>getOrigin</name></member>
      <member refid="class_geometry_1_1_cc_grid_1ac4cc89dbd0cf8ea48d204b3dda86db72" prot="public" virt="non-virtual"><scope>Geometry::CcGrid</scope><name>getSideLength</name></member>
      <member refid="class_geometry_1_1_cc_grid_1a5d8fe3fccb91132ff5328f69105bcda2" prot="protected" virt="non-virtual"><scope>Geometry::CcGrid</scope><name>origin</name></member>
      <member refid="class_geometry_1_1_cc_grid_1a34ad13cdd79d72ee51591dab2b0fc8d2" prot="public" virt="non-virtual"><scope>Geometry::CcGrid</scope><name>setOrigin</name></member>
      <member refid="class_geometry_1_1_cc_grid_1a31f75e1d9923ef16f08abfc1fcfa939f" prot="public" virt="non-virtual"><scope>Geometry::CcGrid</scope><name>setSideLength</name></member>
      <member refid="class_geometry_1_1_cc_grid_1a75b94af80f9cec348d50461cd6823cb7" prot="protected" virt="non-virtual"><scope>Geometry::CcGrid</scope><name>sideLength</name></member>
      <member refid="class_geometry_1_1_cc_grid_1a498ab2db3cb1dc1a9fba46068a8b212f" prot="protected" virt="non-virtual"><scope>Geometry::CcGrid</scope><name>sideLengthHalf</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
