<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.7">
  <compounddef id="class_visualisation_1_1_camera" kind="class" prot="public">
    <compoundname>Visualisation::Camera</compoundname>
    <includes refid="_camera_8h" local="no">Camera.h</includes>
    <templateparamlist>
      <param>
        <type>typename T</type>
      </param>
    </templateparamlist>
      <sectiondef kind="protected-attrib">
      <memberdef kind="variable" id="class_visualisation_1_1_camera_1a92c08fdee4c3d7ce4f5180f6222a9a13" prot="protected" static="no" mutable="no">
        <type><ref refid="class_geometry_1_1_vector" kindref="compound">Vector</ref>&lt; T &gt;</type>
        <definition>Vector&lt;T&gt; position</definition>
        <argsstring></argsstring>
        <name>position</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/Jurecska/Desktop/Új mappa/Camera.h" line="27" column="1" bodyfile="C:/Users/Jurecska/Desktop/Új mappa/Camera.h" bodystart="27" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_visualisation_1_1_camera_1a638612f355e51566db942352b3d766d3" prot="protected" static="no" mutable="no">
        <type><ref refid="class_geometry_1_1_vector" kindref="compound">Vector</ref>&lt; T &gt;</type>
        <definition>Vector&lt;T&gt; target</definition>
        <argsstring></argsstring>
        <name>target</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/Jurecska/Desktop/Új mappa/Camera.h" line="28" column="1" bodyfile="C:/Users/Jurecska/Desktop/Új mappa/Camera.h" bodystart="28" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_visualisation_1_1_camera_1ab9a868c542948837e7c480136ef607a5" prot="protected" static="no" mutable="no">
        <type><ref refid="class_geometry_1_1_vector" kindref="compound">Vector</ref>&lt; T &gt;</type>
        <definition>Vector&lt;T&gt; up</definition>
        <argsstring></argsstring>
        <name>up</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/Jurecska/Desktop/Új mappa/Camera.h" line="29" column="1" bodyfile="C:/Users/Jurecska/Desktop/Új mappa/Camera.h" bodystart="29" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_visualisation_1_1_camera_1abe195e06d9db73b3a48108de43801417" prot="protected" static="no" mutable="no">
        <type><ref refid="class_geometry_1_1_vector" kindref="compound">Vector</ref>&lt; T &gt;</type>
        <definition>Vector&lt;T&gt; w</definition>
        <argsstring></argsstring>
        <name>w</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/Jurecska/Desktop/Új mappa/Camera.h" line="32" column="1" bodyfile="C:/Users/Jurecska/Desktop/Új mappa/Camera.h" bodystart="32" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_visualisation_1_1_camera_1a45950d62903c61035ae44d3369fa4de6" prot="protected" static="no" mutable="no">
        <type><ref refid="class_geometry_1_1_vector" kindref="compound">Vector</ref>&lt; T &gt;</type>
        <definition>Vector&lt;T&gt; u</definition>
        <argsstring></argsstring>
        <name>u</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/Jurecska/Desktop/Új mappa/Camera.h" line="33" column="1" bodyfile="C:/Users/Jurecska/Desktop/Új mappa/Camera.h" bodystart="33" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_visualisation_1_1_camera_1a085dcb77f34a3b67855b945b67193e58" prot="protected" static="no" mutable="no">
        <type><ref refid="class_geometry_1_1_vector" kindref="compound">Vector</ref>&lt; T &gt;</type>
        <definition>Vector&lt;T&gt; v</definition>
        <argsstring></argsstring>
        <name>v</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/Jurecska/Desktop/Új mappa/Camera.h" line="33" column="1" bodyfile="C:/Users/Jurecska/Desktop/Új mappa/Camera.h" bodystart="33" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_visualisation_1_1_camera_1a591242bd411b6edc95230b4a50fe29e4" prot="protected" static="no" mutable="no">
        <type><ref refid="struct_visualisation_1_1_image_plane" kindref="compound">ImagePlane</ref>&lt; T &gt;</type>
        <definition>ImagePlane&lt;T&gt; imgPlane</definition>
        <argsstring></argsstring>
        <name>imgPlane</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/Jurecska/Desktop/Új mappa/Camera.h" line="35" column="1" bodyfile="C:/Users/Jurecska/Desktop/Új mappa/Camera.h" bodystart="35" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_visualisation_1_1_camera_1ac643790c550721659e9c65657a946b64" prot="protected" static="no" mutable="no">
        <type>T</type>
        <definition>T scale</definition>
        <argsstring></argsstring>
        <name>scale</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/Jurecska/Desktop/Új mappa/Camera.h" line="36" column="1" bodyfile="C:/Users/Jurecska/Desktop/Új mappa/Camera.h" bodystart="36" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="class_visualisation_1_1_camera_1a198510be904c62692e946888a55669b3" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>Camera</definition>
        <argsstring>(const Vector&lt; T &gt; &amp;position, const Vector&lt; T &gt; &amp;target, const Vector&lt; T &gt; &amp;up, const ImagePlane&lt; T &gt; &amp;imgPlane, const T &amp;scale)</argsstring>
        <name>Camera</name>
        <param>
          <type>const <ref refid="class_geometry_1_1_vector" kindref="compound">Vector</ref>&lt; T &gt; &amp;</type>
          <declname>position</declname>
        </param>
        <param>
          <type>const <ref refid="class_geometry_1_1_vector" kindref="compound">Vector</ref>&lt; T &gt; &amp;</type>
          <declname>target</declname>
        </param>
        <param>
          <type>const <ref refid="class_geometry_1_1_vector" kindref="compound">Vector</ref>&lt; T &gt; &amp;</type>
          <declname>up</declname>
        </param>
        <param>
          <type>const <ref refid="struct_visualisation_1_1_image_plane" kindref="compound">ImagePlane</ref>&lt; T &gt; &amp;</type>
          <declname>imgPlane</declname>
        </param>
        <param>
          <type>const T &amp;</type>
          <declname>scale</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>c&apos;tor with arguments </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/Jurecska/Desktop/Új mappa/Camera.h" line="42" column="1" bodyfile="C:/Users/Jurecska/Desktop/Új mappa/Camera.h" bodystart="139" bodyend="147"/>
      </memberdef>
      <memberdef kind="function" id="class_visualisation_1_1_camera_1ae82c208ee6495d11bd3055cf4db8772a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>unsigned int</type>
        <definition>unsigned int capture</definition>
        <argsstring>(const ModelSpace&lt; T &gt; &amp;modelSpace, Colour *imgBuffer, unsigned short hRes, unsigned short vRes, const Utilities::TypeOperators&lt; T &gt; &amp;Toperators=Utilities::TypeOperators&lt; T &gt;())</argsstring>
        <name>capture</name>
        <param>
          <type>const <ref refid="class_visualisation_1_1_model_space" kindref="compound">ModelSpace</ref>&lt; T &gt; &amp;</type>
          <declname>modelSpace</declname>
        </param>
        <param>
          <type><ref refid="struct_visualisation_1_1_colour" kindref="compound">Colour</ref> *</type>
          <declname>imgBuffer</declname>
        </param>
        <param>
          <type>unsigned short</type>
          <declname>hRes</declname>
        </param>
        <param>
          <type>unsigned short</type>
          <declname>vRes</declname>
        </param>
        <param>
          <type>const <ref refid="class_utilities_1_1_type_operators" kindref="compound">Utilities::TypeOperators</ref>&lt; T &gt; &amp;</type>
          <declname>Toperators</declname>
          <defval><ref refid="class_utilities_1_1_type_operators" kindref="compound">Utilities::TypeOperators</ref>&lt; T &gt;()</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Method, that creates an image of the model space from the cameras view with the given resolution. <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>modelSpace</parametername>
</parameternamelist>
<parameterdescription>
<para>- the model space to be captured </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>imgBuffer</parametername>
</parameternamelist>
<parameterdescription>
<para>- array where to store the image color values </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>hRes</parametername>
</parameternamelist>
<parameterdescription>
<para>- the horizontal resolution of the image </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>vRes</parametername>
</parameternamelist>
<parameterdescription>
<para>- the vertical resolution of the image </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>Toperators</parametername>
</parameternamelist>
<parameterdescription>
<para>- the operators object of type T </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>Toperators</parametername>
</parameternamelist>
<parameterdescription>
<para>- the operators object of type T </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>- the number of colour values put in the image buffer </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/Jurecska/Desktop/Új mappa/Camera.h" line="57" column="1" bodyfile="C:/Users/Jurecska/Desktop/Új mappa/Camera.h" bodystart="150" bodyend="179"/>
      </memberdef>
      <memberdef kind="function" id="class_visualisation_1_1_camera_1ab7e8c42e2bf86d647287a4f03d91795f" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="struct_visualisation_1_1_image_plane" kindref="compound">ImagePlane</ref>&lt; T &gt;</type>
        <definition>ImagePlane&lt; T &gt; getImagePlane</definition>
        <argsstring>() const </argsstring>
        <name>getImagePlane</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Getter function for the image plane object. <simplesect kind="return"><para>- the actual image plane object </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/Jurecska/Desktop/Új mappa/Camera.h" line="64" column="1" bodyfile="C:/Users/Jurecska/Desktop/Új mappa/Camera.h" bodystart="182" bodyend="185"/>
      </memberdef>
      <memberdef kind="function" id="class_visualisation_1_1_camera_1ac59fe71c978d3683f22cbbe25b88fdee" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void setImagePlane</definition>
        <argsstring>(const ImagePlane&lt; T &gt; &amp;imgPlane)</argsstring>
        <name>setImagePlane</name>
        <param>
          <type>const <ref refid="struct_visualisation_1_1_image_plane" kindref="compound">ImagePlane</ref>&lt; T &gt; &amp;</type>
          <declname>imgPlane</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Setter function for the image plane object. <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>imgPlane</parametername>
</parameternamelist>
<parameterdescription>
<para>- the new image plane object </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/Jurecska/Desktop/Új mappa/Camera.h" line="70" column="1" bodyfile="C:/Users/Jurecska/Desktop/Új mappa/Camera.h" bodystart="188" bodyend="191"/>
      </memberdef>
      <memberdef kind="function" id="class_visualisation_1_1_camera_1a85e8606eebf3cfd76af7d5ec308152d9" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>T</type>
        <definition>T getScale</definition>
        <argsstring>() const </argsstring>
        <name>getScale</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Getter function for the scale value. This value is used by the ray casting algorithm. <simplesect kind="return"><para>- the actual scale value </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/Jurecska/Desktop/Új mappa/Camera.h" line="77" column="1" bodyfile="C:/Users/Jurecska/Desktop/Új mappa/Camera.h" bodystart="194" bodyend="197"/>
      </memberdef>
      <memberdef kind="function" id="class_visualisation_1_1_camera_1afebb878e948e05d2913a0ec13b9f8b17" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void setScale</definition>
        <argsstring>(const T &amp;scale)</argsstring>
        <name>setScale</name>
        <param>
          <type>const T &amp;</type>
          <declname>scale</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Setter function for the scale value. This value is used by the ray casting algorithm. <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>imgPlane</parametername>
</parameternamelist>
<parameterdescription>
<para>- the new scale value </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/Jurecska/Desktop/Új mappa/Camera.h" line="84" column="1" bodyfile="C:/Users/Jurecska/Desktop/Új mappa/Camera.h" bodystart="200" bodyend="203"/>
      </memberdef>
      <memberdef kind="function" id="class_visualisation_1_1_camera_1aec0f566b4f80ad1f6bdffabd00fc1c53" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="class_geometry_1_1_vector" kindref="compound">Vector</ref>&lt; T &gt;</type>
        <definition>Vector&lt; T &gt; getPosition</definition>
        <argsstring>() const </argsstring>
        <name>getPosition</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Getter function for the position of the camera. <simplesect kind="return"><para>- the actual position of the camera </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/Jurecska/Desktop/Új mappa/Camera.h" line="90" column="1" bodyfile="C:/Users/Jurecska/Desktop/Új mappa/Camera.h" bodystart="206" bodyend="209"/>
      </memberdef>
      <memberdef kind="function" id="class_visualisation_1_1_camera_1acceeea5f3e89935b9ec259a0d6f78020" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void setPosition</definition>
        <argsstring>(const Vector&lt; T &gt; &amp;position)</argsstring>
        <name>setPosition</name>
        <param>
          <type>const <ref refid="class_geometry_1_1_vector" kindref="compound">Vector</ref>&lt; T &gt; &amp;</type>
          <declname>position</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Setter function for the position of the camera. <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>position</parametername>
</parameternamelist>
<parameterdescription>
<para>- the new position of the camera </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/Jurecska/Desktop/Új mappa/Camera.h" line="96" column="1" bodyfile="C:/Users/Jurecska/Desktop/Új mappa/Camera.h" bodystart="212" bodyend="216"/>
      </memberdef>
      <memberdef kind="function" id="class_visualisation_1_1_camera_1a82febe46be55b809f39c09023e9a94fd" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="class_geometry_1_1_vector" kindref="compound">Vector</ref>&lt; T &gt;</type>
        <definition>Vector&lt; T &gt; getTarget</definition>
        <argsstring>() const </argsstring>
        <name>getTarget</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Getter function for the target of the camera. <simplesect kind="return"><para>- the actual target point of the camera </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/Jurecska/Desktop/Új mappa/Camera.h" line="102" column="1" bodyfile="C:/Users/Jurecska/Desktop/Új mappa/Camera.h" bodystart="219" bodyend="222"/>
      </memberdef>
      <memberdef kind="function" id="class_visualisation_1_1_camera_1a48faa2830f1ed31f63d0bfb714204279" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void setTarget</definition>
        <argsstring>(const Vector&lt; T &gt; &amp;target)</argsstring>
        <name>setTarget</name>
        <param>
          <type>const <ref refid="class_geometry_1_1_vector" kindref="compound">Vector</ref>&lt; T &gt; &amp;</type>
          <declname>target</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Setter function for the target of the camera. <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>position</parametername>
</parameternamelist>
<parameterdescription>
<para>- the new target point of the camera </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/Jurecska/Desktop/Új mappa/Camera.h" line="108" column="1" bodyfile="C:/Users/Jurecska/Desktop/Új mappa/Camera.h" bodystart="225" bodyend="229"/>
      </memberdef>
      <memberdef kind="function" id="class_visualisation_1_1_camera_1a5ce9a3efd30b5f99eea7abc32b7f5030" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="class_geometry_1_1_vector" kindref="compound">Vector</ref>&lt; T &gt;</type>
        <definition>Vector&lt; T &gt; getUpVector</definition>
        <argsstring>() const </argsstring>
        <name>getUpVector</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Getter function for the UP-vector of the camera. <simplesect kind="return"><para>- the actual UP-vector of the camera </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/Jurecska/Desktop/Új mappa/Camera.h" line="114" column="1" bodyfile="C:/Users/Jurecska/Desktop/Új mappa/Camera.h" bodystart="232" bodyend="235"/>
      </memberdef>
      <memberdef kind="function" id="class_visualisation_1_1_camera_1a7156609219c613e7971fe173d09584b4" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void setUpVector</definition>
        <argsstring>(const Vector&lt; T &gt; &amp;up)</argsstring>
        <name>setUpVector</name>
        <param>
          <type>const <ref refid="class_geometry_1_1_vector" kindref="compound">Vector</ref>&lt; T &gt; &amp;</type>
          <declname>up</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Setter function for the UP-vector of the camera. <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>up</parametername>
</parameternamelist>
<parameterdescription>
<para>- the new UP-vector of the camera </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/Jurecska/Desktop/Új mappa/Camera.h" line="120" column="1" bodyfile="C:/Users/Jurecska/Desktop/Új mappa/Camera.h" bodystart="238" bodyend="242"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-func">
      <memberdef kind="function" id="class_visualisation_1_1_camera_1ad7490e67730ec1c91c70618adc0124d3" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void updateCoSys</definition>
        <argsstring>()</argsstring>
        <name>updateCoSys</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>This method updates the coordinate system vectors according to the other vectors. (position, target, up) </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/Jurecska/Desktop/Új mappa/Camera.h" line="127" column="1" bodyfile="C:/Users/Jurecska/Desktop/Új mappa/Camera.h" bodystart="247" bodyend="252"/>
      </memberdef>
      <memberdef kind="function" id="class_visualisation_1_1_camera_1afd68152de8c52b9e3f0459c413463b0a" prot="private" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="class_geometry_1_1_vector" kindref="compound">Vector</ref>&lt; T &gt;</type>
        <definition>Vector&lt; T &gt; get3DcrossProd</definition>
        <argsstring>(const Vector&lt; T &gt; &amp;u, const Vector&lt; T &gt; &amp;v) const </argsstring>
        <name>get3DcrossProd</name>
        <param>
          <type>const <ref refid="class_geometry_1_1_vector" kindref="compound">Vector</ref>&lt; T &gt; &amp;</type>
          <declname>u</declname>
        </param>
        <param>
          <type>const <ref refid="class_geometry_1_1_vector" kindref="compound">Vector</ref>&lt; T &gt; &amp;</type>
          <declname>v</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Cross product for 3D vectors. <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>u</parametername>
<parametername>v</parametername>
</parameternamelist>
<parameterdescription>
<para>- the two 3D vectors whose cross product we are looking for </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>- u x v </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/Jurecska/Desktop/Új mappa/Camera.h" line="134" column="1" bodyfile="C:/Users/Jurecska/Desktop/Új mappa/Camera.h" bodystart="255" bodyend="263"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
<para>This class represents a camera object. It can generate rays to sample the whole space behind the image plane for each pixel, and create an image. (color values for each pixel) </para>    </detaileddescription>
    <location file="C:/Users/Jurecska/Desktop/Új mappa/Camera.h" line="25" column="1" bodyfile="C:/Users/Jurecska/Desktop/Új mappa/Camera.h" bodystart="24" bodyend="135"/>
    <listofallmembers>
      <member refid="class_visualisation_1_1_camera_1a198510be904c62692e946888a55669b3" prot="public" virt="non-virtual"><scope>Visualisation::Camera</scope><name>Camera</name></member>
      <member refid="class_visualisation_1_1_camera_1ae82c208ee6495d11bd3055cf4db8772a" prot="public" virt="non-virtual"><scope>Visualisation::Camera</scope><name>capture</name></member>
      <member refid="class_visualisation_1_1_camera_1afd68152de8c52b9e3f0459c413463b0a" prot="private" virt="non-virtual"><scope>Visualisation::Camera</scope><name>get3DcrossProd</name></member>
      <member refid="class_visualisation_1_1_camera_1ab7e8c42e2bf86d647287a4f03d91795f" prot="public" virt="non-virtual"><scope>Visualisation::Camera</scope><name>getImagePlane</name></member>
      <member refid="class_visualisation_1_1_camera_1aec0f566b4f80ad1f6bdffabd00fc1c53" prot="public" virt="non-virtual"><scope>Visualisation::Camera</scope><name>getPosition</name></member>
      <member refid="class_visualisation_1_1_camera_1a85e8606eebf3cfd76af7d5ec308152d9" prot="public" virt="non-virtual"><scope>Visualisation::Camera</scope><name>getScale</name></member>
      <member refid="class_visualisation_1_1_camera_1a82febe46be55b809f39c09023e9a94fd" prot="public" virt="non-virtual"><scope>Visualisation::Camera</scope><name>getTarget</name></member>
      <member refid="class_visualisation_1_1_camera_1a5ce9a3efd30b5f99eea7abc32b7f5030" prot="public" virt="non-virtual"><scope>Visualisation::Camera</scope><name>getUpVector</name></member>
      <member refid="class_visualisation_1_1_camera_1a591242bd411b6edc95230b4a50fe29e4" prot="protected" virt="non-virtual"><scope>Visualisation::Camera</scope><name>imgPlane</name></member>
      <member refid="class_visualisation_1_1_camera_1a92c08fdee4c3d7ce4f5180f6222a9a13" prot="protected" virt="non-virtual"><scope>Visualisation::Camera</scope><name>position</name></member>
      <member refid="class_visualisation_1_1_camera_1ac643790c550721659e9c65657a946b64" prot="protected" virt="non-virtual"><scope>Visualisation::Camera</scope><name>scale</name></member>
      <member refid="class_visualisation_1_1_camera_1ac59fe71c978d3683f22cbbe25b88fdee" prot="public" virt="non-virtual"><scope>Visualisation::Camera</scope><name>setImagePlane</name></member>
      <member refid="class_visualisation_1_1_camera_1acceeea5f3e89935b9ec259a0d6f78020" prot="public" virt="non-virtual"><scope>Visualisation::Camera</scope><name>setPosition</name></member>
      <member refid="class_visualisation_1_1_camera_1afebb878e948e05d2913a0ec13b9f8b17" prot="public" virt="non-virtual"><scope>Visualisation::Camera</scope><name>setScale</name></member>
      <member refid="class_visualisation_1_1_camera_1a48faa2830f1ed31f63d0bfb714204279" prot="public" virt="non-virtual"><scope>Visualisation::Camera</scope><name>setTarget</name></member>
      <member refid="class_visualisation_1_1_camera_1a7156609219c613e7971fe173d09584b4" prot="public" virt="non-virtual"><scope>Visualisation::Camera</scope><name>setUpVector</name></member>
      <member refid="class_visualisation_1_1_camera_1a638612f355e51566db942352b3d766d3" prot="protected" virt="non-virtual"><scope>Visualisation::Camera</scope><name>target</name></member>
      <member refid="class_visualisation_1_1_camera_1a45950d62903c61035ae44d3369fa4de6" prot="protected" virt="non-virtual"><scope>Visualisation::Camera</scope><name>u</name></member>
      <member refid="class_visualisation_1_1_camera_1ab9a868c542948837e7c480136ef607a5" prot="protected" virt="non-virtual"><scope>Visualisation::Camera</scope><name>up</name></member>
      <member refid="class_visualisation_1_1_camera_1ad7490e67730ec1c91c70618adc0124d3" prot="private" virt="non-virtual"><scope>Visualisation::Camera</scope><name>updateCoSys</name></member>
      <member refid="class_visualisation_1_1_camera_1a085dcb77f34a3b67855b945b67193e58" prot="protected" virt="non-virtual"><scope>Visualisation::Camera</scope><name>v</name></member>
      <member refid="class_visualisation_1_1_camera_1abe195e06d9db73b3a48108de43801417" prot="protected" virt="non-virtual"><scope>Visualisation::Camera</scope><name>w</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
